class Solution {
    public boolean check(long x , long k , int[] candies) {
        long ans = 0;
        for(int i = 0; i < candies.length; i++) {
             ans += candies[i] / x;
        }
        if(ans >= k)
          return true;
        return false;
    }
    public long binarySearch(long right , long k , int[] candies) {
        long left = 1;
        long x = 0;
        while(left <= right) {
            long mid = (left + right) / 2;
            if(check(mid , k , candies)) {
                x = mid;
                left = mid + 1;
            }
            else {
                right = mid - 1;
            }
        }
        return x;
    }
    public int maximumCandies(int[] candies, long k) {
        int n = candies.length;
        long maxi = Long.MIN_VALUE;
        for(int i = 0; i < n; i++) {
            maxi = Math.max(maxi , candies[i]);
        }
        return (int)binarySearch(maxi , k , candies);
    }
}
